label: 'Scenario label'
default:
  request:
    path: /json

cases:
  - label: Returns a JSON result
    request:
      params:
        key: value
        multi-key:
          - value1
          - value2
    response:
      status_code: 200
      headers:
        - describe: ."content-type"
          should:
            equal: application/json
        - describe:
            jq: ."content-length"
            cast_to: int
          should:
            be_greater_than: 100
      body:
        - describe: .not_existing_key
          should: be_null
        - describe: .empty_string
          should: be_empty
        - describe: .empty_list
          should: be_empty
        - describe: .foo
          should:
            - not_be_null
            - not: be_empty
            - be: bar
            - be:
                not: baz
            - be:
                not:
                  contain_string: x
            - equal: bar
            - have_length: 3
            - contain_string: a
            - start_with: ba
            - end_with: ar
            - match_regexp: ^b.r$
        - describe: .list
          should:
            - not:
                have_item: ''
            - have_item: 1
        - describe:
            jq: .items[].x
            multiple: true
          should:
            equal:
              - '1'
              - null
              - '2'
        - describe:
            jq: .items[].x
            multiple: true
            cast_to: int
          should:
            - contain: [1, anything, 2]
            - contain_in_any_order: [1, 2, null]
            - have_items: [1, 2]
            - all_of:
                - have_item: 1
                - have_item: 2
            - any_of:
                - have_item: be_null

  - label: Returns an XML result
    request: /xml
    response:
      status_code: 200
      body:
        analyze_as: xml
        descriptions:
          - describe:
              xpath: /root/foo
            should:
              equal: '1'
          - describe:
              xpath: /root/foo
              cast_to: int
            should:
              equal: 1
          - describe:
              xpath: /root/foo
              multiple: true
              cast_to: float
            should:
              equal:
                - 1.0
                - 2.0
          - describe:
              xpath: ./foo[1]/@id
            should:
              equal: foo1
          - describe:
              xpath: //baz/@id
            should:
              equal: baz1

  - label: Datetime verifications
    request: /later/1
    response:
      status_code: 200
      body:
        describe: .now
        should:
          - be_before: 1 minute
          - be_after: -2 minutes
          - be_after: 1 second  # Must be processed after 1 seconds.

  - label: Returns a failure result
    request:
      path: /error/404
    response:
      status_code:
        - equal: 404
        - be_greater_than: 399
        - be_greater_than_or_equal_to: 400
        - be_less_than_or_equal_to: 499
        - be_less_than: 500

  - label: Send headers
    request:
      path: /header
      headers:
        header-string: xxx
        Header-String: yyy
        user-agent: custom
    response:
      status_code: 200
      body:
        - describe: ."header-string"
          should:
            equal: yyy
        - describe: ."user-agent"
          should:
            equal: custom

  - label: No description doesn't cause error
    response:
      body:
        describe: .foo

  - label: No validations for text doesn't fail
    request:
      path: /text
    response:
      headers:
        describe: ."content-type"
        should:
          equal: text/plain
